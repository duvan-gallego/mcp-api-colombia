// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client/index.js';
import type { GetApiV1CountryColombiaData, GetApiV1CountryColombiaResponses, GetApiV1RegionData, GetApiV1RegionResponses, GetApiV1RegionByIdData, GetApiV1RegionByIdResponses, GetApiV1RegionByIdDepartmentsData, GetApiV1RegionByIdDepartmentsResponses, GetApiV1DepartmentData, GetApiV1DepartmentResponses, GetApiV1DepartmentByIdData, GetApiV1DepartmentByIdResponses, GetApiV1DepartmentByIdCitiesData, GetApiV1DepartmentByIdCitiesResponses, GetApiV1DepartmentByIdNaturalareasData, GetApiV1DepartmentByIdNaturalareasResponses, GetApiV1DepartmentByIdTouristicattractionsData, GetApiV1DepartmentByIdTouristicattractionsResponses, GetApiV1DepartmentNameByNameData, GetApiV1DepartmentNameByNameResponses, GetApiV1DepartmentSearchByKeywordData, GetApiV1DepartmentSearchByKeywordResponses, GetApiV1DepartmentPagedListData, GetApiV1DepartmentPagedListResponses, GetApiV1CityData, GetApiV1CityResponses, GetApiV1CityByIdData, GetApiV1CityByIdResponses, GetApiV1CityNameByNameData, GetApiV1CityNameByNameResponses, GetApiV1CitySearchByKeywordData, GetApiV1CitySearchByKeywordResponses, GetApiV1CityPagedListData, GetApiV1CityPagedListResponses, GetApiV1PresidentData, GetApiV1PresidentResponses, GetApiV1PresidentByIdData, GetApiV1PresidentByIdResponses, GetApiV1PresidentNameByNameData, GetApiV1PresidentNameByNameResponses, GetApiV1PresidentYearByYearData, GetApiV1PresidentYearByYearResponses, GetApiV1PresidentSearchByKeywordData, GetApiV1PresidentSearchByKeywordResponses, GetApiV1PresidentPagedListData, GetApiV1PresidentPagedListResponses, GetApiV1TouristicAttractionData, GetApiV1TouristicAttractionResponses, GetApiV1TouristicAttractionByIdData, GetApiV1TouristicAttractionByIdResponses, GetApiV1TouristicAttractionNameByNameData, GetApiV1TouristicAttractionNameByNameResponses, GetApiV1TouristicAttractionSearchByKeywordData, GetApiV1TouristicAttractionSearchByKeywordResponses, GetApiV1TouristicAttractionPagedListData, GetApiV1TouristicAttractionPagedListResponses, GetApiV1CategoryNaturalAreaData, GetApiV1CategoryNaturalAreaResponses, GetApiV1CategoryNaturalAreaByIdData, GetApiV1CategoryNaturalAreaByIdResponses, GetApiV1CategoryNaturalAreaByIdNaturalAreasData, GetApiV1CategoryNaturalAreaByIdNaturalAreasResponses, GetApiV1NaturalAreaData, GetApiV1NaturalAreaResponses, GetApiV1NaturalAreaByIdData, GetApiV1NaturalAreaByIdResponses, GetApiV1NaturalAreaNameByNameData, GetApiV1NaturalAreaNameByNameResponses, GetApiV1NaturalAreaSearchByKeywordData, GetApiV1NaturalAreaSearchByKeywordResponses, GetApiV1NaturalAreaPagedListData, GetApiV1NaturalAreaPagedListResponses, GetApiV1MapData, GetApiV1MapResponses, GetApiV1MapByIdData, GetApiV1MapByIdResponses, GetApiV1InvasiveSpecieData, GetApiV1InvasiveSpecieResponses, GetApiV1InvasiveSpecieByIdData, GetApiV1InvasiveSpecieByIdResponses, GetApiV1InvasiveSpecieNameByNameData, GetApiV1InvasiveSpecieNameByNameResponses, GetApiV1InvasiveSpecieSearchByKeywordData, GetApiV1InvasiveSpecieSearchByKeywordResponses, GetApiV1InvasiveSpeciePagedListData, GetApiV1InvasiveSpeciePagedListResponses, GetApiV1NativeCommunityData, GetApiV1NativeCommunityResponses, GetApiV1NativeCommunityByIdData, GetApiV1NativeCommunityByIdResponses, GetApiV1NativeCommunityNameByNameData, GetApiV1NativeCommunityNameByNameResponses, GetApiV1NativeCommunitySearchByKeywordData, GetApiV1NativeCommunitySearchByKeywordResponses, GetApiV1NativeCommunityPagedListData, GetApiV1NativeCommunityPagedListResponses, GetApiV1IndigenousReservationData, GetApiV1IndigenousReservationResponses, GetApiV1IndigenousReservationByIdData, GetApiV1IndigenousReservationByIdResponses, GetApiV1IndigenousReservationNameByNameData, GetApiV1IndigenousReservationNameByNameResponses, GetApiV1IndigenousReservationSearchByKeywordData, GetApiV1IndigenousReservationSearchByKeywordResponses, GetApiV1IndigenousReservationPagedListData, GetApiV1IndigenousReservationPagedListResponses, GetApiV1AirportData, GetApiV1AirportResponses, GetApiV1AirportByIdData, GetApiV1AirportByIdResponses, GetApiV1AirportNameByNameData, GetApiV1AirportNameByNameResponses, GetApiV1AirportSearchByKeywordData, GetApiV1AirportSearchByKeywordResponses, GetApiV1AirportPagedListData, GetApiV1AirportPagedListResponses, GetApiV1ConstitutionArticleData, GetApiV1ConstitutionArticleResponses, GetApiV1ConstitutionArticleByIdData, GetApiV1ConstitutionArticleByIdResponses, GetApiV1ConstitutionArticleSearchByKeywordData, GetApiV1ConstitutionArticleSearchByKeywordResponses, GetApiV1ConstitutionArticlePagedListData, GetApiV1ConstitutionArticlePagedListResponses, GetApiV1ConstitutionArticleByChapterNumberByChapternumberData, GetApiV1ConstitutionArticleByChapterNumberByChapternumberResponses, GetApiV1RadioData, GetApiV1RadioResponses, GetApiV1RadioByIdData, GetApiV1RadioByIdResponses, GetApiV1RadioNameByNameData, GetApiV1RadioNameByNameResponses, GetApiV1RadioSearchByKeywordData, GetApiV1RadioSearchByKeywordResponses, GetApiV1RadioPagedListData, GetApiV1RadioPagedListResponses, GetApiV1HolidayYearByYearData, GetApiV1HolidayYearByYearResponses, GetApiV1HolidayYearByYearMonthByMonthData, GetApiV1HolidayYearByYearMonthByMonthResponses, GetApiV1TypicalDishData, GetApiV1TypicalDishResponses, GetApiV1TypicalDishByIdData, GetApiV1TypicalDishByIdResponses, GetApiV1TypicalDishByIdDepartmentData, GetApiV1TypicalDishByIdDepartmentResponses, GetApiV1TypicalDishNameByNameData, GetApiV1TypicalDishNameByNameResponses, GetApiV1TypicalDishSearchByKeywordData, GetApiV1TypicalDishSearchByKeywordResponses, GetApiV1TypicalDishPagedListData, GetApiV1TypicalDishPagedListResponses, GetApiV1TraditionalFairAndFestivalData, GetApiV1TraditionalFairAndFestivalResponses, GetApiV1TraditionalFairAndFestivalByIdData, GetApiV1TraditionalFairAndFestivalByIdResponses, GetApiV1TraditionalFairAndFestivalByIdCityData, GetApiV1TraditionalFairAndFestivalByIdCityResponses, GetApiV1TraditionalFairAndFestivalNameByNameData, GetApiV1TraditionalFairAndFestivalNameByNameResponses, GetApiV1TraditionalFairAndFestivalSearchByKeywordData, GetApiV1TraditionalFairAndFestivalSearchByKeywordResponses, GetApiV1TraditionalFairAndFestivalPagedListData, GetApiV1TraditionalFairAndFestivalPagedListResponses } from './types.gen.js';
import { client as _heyApiClient } from './client.gen.js';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * General info about Colombia
 * This endpoint returns the information about Colombia like TimeZone, Languages, Currency, etc...
 */
export const getApiV1CountryColombia = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1CountryColombiaData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1CountryColombiaResponses, unknown, ThrowOnError>({
        url: '/api/v1/Country/Colombia',
        ...options
    });
};

/**
 * List of regions in Colombia
 *  This endpoint returns a list of regions in Colombia
 */
export const getApiV1Region = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1RegionData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1RegionResponses, unknown, ThrowOnError>({
        url: '/api/v1/Region',
        ...options
    });
};

/**
 * Region information by Id
 * This endpoint returns the information for the region with the provided id
 */
export const getApiV1RegionById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1RegionByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1RegionByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/Region/{id}',
        ...options
    });
};

/**
 * Region information by Id including deparment's list
 * This endpoint returns the information for the region with the provided id including deparments
 */
export const getApiV1RegionByIdDepartments = <ThrowOnError extends boolean = false>(options: Options<GetApiV1RegionByIdDepartmentsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1RegionByIdDepartmentsResponses, unknown, ThrowOnError>({
        url: '/api/v1/Region/{id}/departments',
        ...options
    });
};

/**
 * List of departments in Colombia
 * This endpoint returns the departments in colombia including a general info like description, phone prefix, capital city, etc...
 */
export const getApiV1Department = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1DepartmentData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1DepartmentResponses, unknown, ThrowOnError>({
        url: '/api/v1/Department',
        ...options
    });
};

/**
 * Department information by Id
 * This endpoint returns the information for the department with the provided id
 */
export const getApiV1DepartmentById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1DepartmentByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1DepartmentByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/Department/{id}',
        ...options
    });
};

/**
 * List of cities by departmentId
 * This endpoint returns a list of cities filtered by departmentid
 */
export const getApiV1DepartmentByIdCities = <ThrowOnError extends boolean = false>(options: Options<GetApiV1DepartmentByIdCitiesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1DepartmentByIdCitiesResponses, unknown, ThrowOnError>({
        url: '/api/v1/Department/{id}/cities',
        ...options
    });
};

/**
 * List of natural areas by departmentId
 * This endpoint returns a list of natural areas filtered by departmentid
 */
export const getApiV1DepartmentByIdNaturalareas = <ThrowOnError extends boolean = false>(options: Options<GetApiV1DepartmentByIdNaturalareasData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1DepartmentByIdNaturalareasResponses, unknown, ThrowOnError>({
        url: '/api/v1/Department/{id}/naturalareas',
        ...options
    });
};

/**
 * List of natural areas by departmentId
 * This endpoint returns a list of natural areas filtered by departmentid
 */
export const getApiV1DepartmentByIdTouristicattractions = <ThrowOnError extends boolean = false>(options: Options<GetApiV1DepartmentByIdTouristicattractionsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1DepartmentByIdTouristicattractionsResponses, unknown, ThrowOnError>({
        url: '/api/v1/Department/{id}/touristicattractions',
        ...options
    });
};

/**
 * Department information by name
 * This endpoint returns the information for the department with the provided name
 */
export const getApiV1DepartmentNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1DepartmentNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1DepartmentNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/Department/name/{name}',
        ...options
    });
};

/**
 * Search departments by keyword
 * This endpoint returns a list of departments any of the following fields(Name, Description, PhonePrefix) match the provided keyword
 */
export const getApiV1DepartmentSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1DepartmentSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1DepartmentSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/Department/search/{keyword}',
        ...options
    });
};

/**
 * List of departments using pagination - api/v1/department/pagedList?page=1&pagesize=10
 * This endpoint returns a list of departments using pagination including page, pagesize, total records and data, example api/v1/department/pagedList?page=1&pagesize=10
 */
export const getApiV1DepartmentPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1DepartmentPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1DepartmentPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/Department/pagedList',
        ...options
    });
};

/**
 * List of cities in Colombia
 * This endpoint returns the cities in colombia including general info like description, department, Surface city, etc...
 */
export const getApiV1City = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1CityData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1CityResponses, unknown, ThrowOnError>({
        url: '/api/v1/City',
        ...options
    });
};

/**
 * City information by Id
 * This endpoint returns the information for the city with the provided id
 */
export const getApiV1CityById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1CityByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1CityByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/City/{id}',
        ...options
    });
};

/**
 * City information by name
 * This endpoint returns the information for the city with the provided name
 */
export const getApiV1CityNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1CityNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1CityNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/City/name/{name}',
        ...options
    });
};

/**
 * Search cities by keyword
 * This endpoint returns a list of cities any of the following fields(Name, Description, PostalCode) match the provided keyword
 */
export const getApiV1CitySearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1CitySearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1CitySearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/City/search/{keyword}',
        ...options
    });
};

/**
 * List of cities using pagination - api/v1/city/pagedList?page=1&pagesize=10
 * This endpoint returns a list of cities using pagination including page, pagesize, total records and data, example api/v1/city/pagedList?page=1&pagesize=10
 */
export const getApiV1CityPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1CityPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1CityPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/City/pagedList',
        ...options
    });
};

/**
 * List of presidents in Colombia
 * This endpoint returns the presidents in colombia including general info like political party, city, start period, etc...
 */
export const getApiV1President = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1PresidentData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1PresidentResponses, unknown, ThrowOnError>({
        url: '/api/v1/President',
        ...options
    });
};

/**
 * President information by Id
 * This endpoint returns the information for the president with the provided id
 */
export const getApiV1PresidentById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1PresidentByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1PresidentByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/President/{id}',
        ...options
    });
};

/**
 * President information by name
 * This endpoint returns the information for the president with the provided name
 */
export const getApiV1PresidentNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1PresidentNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1PresidentNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/President/name/{name}',
        ...options
    });
};

/**
 * President of the provided year
 * This endpoint returns the president or presidents in the provided year
 */
export const getApiV1PresidentYearByYear = <ThrowOnError extends boolean = false>(options: Options<GetApiV1PresidentYearByYearData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1PresidentYearByYearResponses, unknown, ThrowOnError>({
        url: '/api/v1/President/year/{year}',
        ...options
    });
};

/**
 * Search presidents by keyword
 * This endpoint returns a list of presidents any of the following fields(Name, Description, PoliticalParty,LastName) match the provided keyword
 */
export const getApiV1PresidentSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1PresidentSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1PresidentSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/President/search/{keyword}',
        ...options
    });
};

/**
 * List of presidents using pagination - api/v1/president/pagedList?page=1&pagesize=10
 * This endpoint returns a list of presidents using pagination including page, pagesize, total records and data, example api/v1/president/pagedList?page=1&pagesize=10
 */
export const getApiV1PresidentPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1PresidentPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1PresidentPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/President/pagedList',
        ...options
    });
};

/**
 * List of touristic attractions in Colombia
 *  This endpoint returns a list of touristic attractions including information about the city where they are located, the latitude and Longitude and image
 */
export const getApiV1TouristicAttraction = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1TouristicAttractionData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1TouristicAttractionResponses, unknown, ThrowOnError>({
        url: '/api/v1/TouristicAttraction',
        ...options
    });
};

/**
 * Touristic attraction by id
 * This endpoint returns an specific touristic attraction by the provided id
 */
export const getApiV1TouristicAttractionById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TouristicAttractionByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TouristicAttractionByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/TouristicAttraction/{id}',
        ...options
    });
};

/**
 * Touristic attraction by name
 * This endpoint returns an specific touristic attraction by the provided name
 */
export const getApiV1TouristicAttractionNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TouristicAttractionNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TouristicAttractionNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/TouristicAttraction/name/{name}',
        ...options
    });
};

/**
 * Search touristic attractions by keyword
 * This endpoint returns a list of touristic attractions any of the following fields(Name, Description,LastName,Latitude, Longitude) match the provided keyword
 */
export const getApiV1TouristicAttractionSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TouristicAttractionSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TouristicAttractionSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/TouristicAttraction/search/{keyword}',
        ...options
    });
};

/**
 * List of touristic attraction using pagination - api/v1/TouristicAttraction/pagedList?page=1&pagesize=10
 * This endpoint returns a list of touristic attractions using pagination including page, pagesize, total records and data, example api/v1/TouristicAttraction/pagedList?page=1&pagesize=10
 */
export const getApiV1TouristicAttractionPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TouristicAttractionPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TouristicAttractionPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/TouristicAttraction/pagedList',
        ...options
    });
};

/**
 * List of category natural areas in Colombia
 *  This endpoint returns a list of category natural areas  in Colombia
 */
export const getApiV1CategoryNaturalArea = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1CategoryNaturalAreaData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1CategoryNaturalAreaResponses, unknown, ThrowOnError>({
        url: '/api/v1/CategoryNaturalArea',
        ...options
    });
};

/**
 * Category natural area information by Id
 * This endpoint returns the information for the category natural area with the provided id
 */
export const getApiV1CategoryNaturalAreaById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1CategoryNaturalAreaByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1CategoryNaturalAreaByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/CategoryNaturalArea/{id}',
        ...options
    });
};

/**
 * Category natural area information by Id
 * This endpoint returns the information for the category natural area with the provided id
 */
export const getApiV1CategoryNaturalAreaByIdNaturalAreas = <ThrowOnError extends boolean = false>(options: Options<GetApiV1CategoryNaturalAreaByIdNaturalAreasData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1CategoryNaturalAreaByIdNaturalAreasResponses, unknown, ThrowOnError>({
        url: '/api/v1/CategoryNaturalArea/{id}/NaturalAreas',
        ...options
    });
};

/**
 * List of natural areas in Colombia
 *  This endpoint returns a list of natural areas  in Colombia
 */
export const getApiV1NaturalArea = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1NaturalAreaData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1NaturalAreaResponses, unknown, ThrowOnError>({
        url: '/api/v1/NaturalArea',
        ...options
    });
};

/**
 * Natural area information by Id
 * This endpoint returns the information for the natural area with the provided id
 */
export const getApiV1NaturalAreaById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1NaturalAreaByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1NaturalAreaByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/NaturalArea/{id}',
        ...options
    });
};

/**
 * Natural place by name
 * This endpoint returns an specific natural places by the provided name
 */
export const getApiV1NaturalAreaNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1NaturalAreaNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1NaturalAreaNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/NaturalArea/name/{name}',
        ...options
    });
};

/**
 * Search natural places by keyword
 * This endpoint returns a list of touristic attractions any of the following fields(Name, Description,LastName,Latitude, Longitude) match the provided keyword
 */
export const getApiV1NaturalAreaSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1NaturalAreaSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1NaturalAreaSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/NaturalArea/search/{keyword}',
        ...options
    });
};

/**
 * List of natural places using pagination - api/v1/naturalarea/pagedList?page=1&pagesize=10
 * This endpoint returns a list of natural places in Colombia using pagination including page, pagesize, total records and data, example api/v1/naturalarea/pagedList?page=1&pagesize=10
 */
export const getApiV1NaturalAreaPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1NaturalAreaPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1NaturalAreaPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/NaturalArea/pagedList',
        ...options
    });
};

/**
 * List of Maps related to Colombia
 * Returns a list of maps including, natural areas, deparmets distribution, water, etc...
 */
export const getApiV1Map = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1MapData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1MapResponses, unknown, ThrowOnError>({
        url: '/api/v1/Map',
        ...options
    });
};

/**
 * Map information by Id
 * This endpoint returns the information for the map with the provided id
 */
export const getApiV1MapById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1MapByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1MapByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/Map/{id}',
        ...options
    });
};

/**
 * List of invasive species in Colombia
 * This endpoint returns the  invasive species in colombia including general info like commonNames, image, manage, etc...
 */
export const getApiV1InvasiveSpecie = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1InvasiveSpecieData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1InvasiveSpecieResponses, unknown, ThrowOnError>({
        url: '/api/v1/InvasiveSpecie',
        ...options
    });
};

/**
 * Invasive specie information by Id
 * This endpoint returns the information for the  invasive specie with the provided id
 */
export const getApiV1InvasiveSpecieById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1InvasiveSpecieByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1InvasiveSpecieByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/InvasiveSpecie/{id}',
        ...options
    });
};

/**
 * Invasive specie information by name
 * This endpoint returns the information for the  invasive specie with the provided name
 */
export const getApiV1InvasiveSpecieNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1InvasiveSpecieNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1InvasiveSpecieNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/InvasiveSpecie/name/{name}',
        ...options
    });
};

/**
 * Search  invasive species by keyword
 * This endpoint returns a list of  invasive species any of the following fields(Name, CommonName, Manage) match the provided keyword
 */
export const getApiV1InvasiveSpecieSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1InvasiveSpecieSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1InvasiveSpecieSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/InvasiveSpecie/search/{keyword}',
        ...options
    });
};

/**
 * List of  invasive species using pagination - api/v1/invasivespecie/pagedList?page=1&pagesize=10
 * This endpoint returns a list of  invasive species using pagination including page, pagesize, total records and data, example api/v1/invasivespecie/pagedList?page=1&pagesize=10
 */
export const getApiV1InvasiveSpeciePagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1InvasiveSpeciePagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1InvasiveSpeciePagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/InvasiveSpecie/pagedList',
        ...options
    });
};

/**
 * List of native communities in Colombia
 * This endpoint returns the native communities in colombia including general info like name, description, images, etc...
 */
export const getApiV1NativeCommunity = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1NativeCommunityData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1NativeCommunityResponses, unknown, ThrowOnError>({
        url: '/api/v1/NativeCommunity',
        ...options
    });
};

/**
 * Native communities information by Id
 * This endpoint returns the information for the native community with the provided id
 */
export const getApiV1NativeCommunityById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1NativeCommunityByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1NativeCommunityByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/NativeCommunity/{id}',
        ...options
    });
};

/**
 * Native community information by name
 * This endpoint returns the information for the  native community with the provided name
 */
export const getApiV1NativeCommunityNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1NativeCommunityNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1NativeCommunityNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/NativeCommunity/name/{name}',
        ...options
    });
};

/**
 * Search native communities by keyword
 * This endpoint returns a list of  native communities any of the following fields(Name, Description, Languages) match the provided keyword
 */
export const getApiV1NativeCommunitySearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1NativeCommunitySearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1NativeCommunitySearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/NativeCommunity/search/{keyword}',
        ...options
    });
};

/**
 * List of native communities using pagination - api/v1/nativecommunity/pagedList?page=1&pagesize=10
 * This endpoint returns a list of native communities using pagination including page, pagesize, total records and data, example api/v1/nativecommunity/pagedList?page=1&pagesize=10
 */
export const getApiV1NativeCommunityPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1NativeCommunityPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1NativeCommunityPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/NativeCommunity/pagedList',
        ...options
    });
};

/**
 * List of Indigenous reservations in Colombia
 * This endpoint returns the Indigenous reservations in colombia including general info like name, description, images, etc...
 */
export const getApiV1IndigenousReservation = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1IndigenousReservationData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1IndigenousReservationResponses, unknown, ThrowOnError>({
        url: '/api/v1/IndigenousReservation',
        ...options
    });
};

/**
 * Indigenous reservations information by Id
 * This endpoint returns the information for the indigenous reservation with the provided id
 */
export const getApiV1IndigenousReservationById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1IndigenousReservationByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1IndigenousReservationByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/IndigenousReservation/{id}',
        ...options
    });
};

/**
 * Indigenous reservation information by name
 * This endpoint returns the information for the  indigenous reservation with the provided name
 */
export const getApiV1IndigenousReservationNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1IndigenousReservationNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1IndigenousReservationNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/IndigenousReservation/name/{name}',
        ...options
    });
};

/**
 * Search Indigenous reservations by keyword
 * This endpoint returns a list of  Indigenous reservations any of the following fields(Name, Description, Languages) match the provided keyword
 */
export const getApiV1IndigenousReservationSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1IndigenousReservationSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1IndigenousReservationSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/IndigenousReservation/search/{keyword}',
        ...options
    });
};

/**
 * List of Indigenous reservations using pagination - api/v1/IndigenousReservation/pagedList?page=1&pagesize=10
 * This endpoint returns a list of Indigenous reservations using pagination including page, pagesize, total records and data, example api/v1/IndigenousReservation/pagedList?page=1&pagesize=10
 */
export const getApiV1IndigenousReservationPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1IndigenousReservationPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1IndigenousReservationPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/IndigenousReservation/pagedList',
        ...options
    });
};

/**
 * List of Airports in Colombia
 * This endpoint returns the Airports in colombia including general info like name, description, images, etc...
 */
export const getApiV1Airport = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1AirportData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1AirportResponses, unknown, ThrowOnError>({
        url: '/api/v1/Airport',
        ...options
    });
};

/**
 * Airports information by Id
 * This endpoint returns the information for the airports with the provided id
 */
export const getApiV1AirportById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1AirportByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1AirportByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/Airport/{id}',
        ...options
    });
};

/**
 * Airports information by name
 * This endpoint returns the information for the airport with the provided name
 */
export const getApiV1AirportNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1AirportNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1AirportNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/Airport/name/{name}',
        ...options
    });
};

/**
 * Search Airports by keyword
 * This endpoint returns a list of  Airports any of the following fields(Name, Description, city) match the provided keyword
 */
export const getApiV1AirportSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1AirportSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1AirportSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/Airport/search/{keyword}',
        ...options
    });
};

/**
 * List of Airports using pagination - api/v1/airport/pagedList?page=1&pagesize=10
 * This endpoint returns a list of Airports using pagination including page, pagesize, total records and data, example api/v1/airport/pagedList?page=1&pagesize=10
 */
export const getApiV1AirportPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1AirportPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1AirportPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/Airport/pagedList',
        ...options
    });
};

/**
 * List of Constitution Articles in Colombia
 * This endpoint returns the Constitution Articles in colombia including general info like title, chapter number, content, etc...
 */
export const getApiV1ConstitutionArticle = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1ConstitutionArticleData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1ConstitutionArticleResponses, unknown, ThrowOnError>({
        url: '/api/v1/ConstitutionArticle',
        ...options
    });
};

/**
 * Constitution Articles information by Id
 * This endpoint returns the information for the airports with the provided id
 */
export const getApiV1ConstitutionArticleById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ConstitutionArticleByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ConstitutionArticleByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/ConstitutionArticle/{id}',
        ...options
    });
};

/**
 * Search Constitution Articles by keyword
 * This endpoint returns a list of  Constitution Articles any of the following fields(title, chapter number, content) match the provided keyword
 */
export const getApiV1ConstitutionArticleSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ConstitutionArticleSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ConstitutionArticleSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/ConstitutionArticle/search/{keyword}',
        ...options
    });
};

/**
 * List of Constitution Articles using pagination - api/v1/ConstitutionArticles/pagedList?page=1&pagesize=10
 * This endpoint returns a list of Constitution Articles using pagination including page, pagesize, total records and data, example api/v1/ConstitutionArticles/pagedList?page=1&pagesize=10
 */
export const getApiV1ConstitutionArticlePagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ConstitutionArticlePagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ConstitutionArticlePagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/ConstitutionArticle/pagedList',
        ...options
    });
};

/**
 * Search Constitution Articles by keyword
 * This endpoint returns a list of  Constitution Articles any of the following fields(title, chapter number, content) match the provided keyword
 */
export const getApiV1ConstitutionArticleByChapterNumberByChapternumber = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ConstitutionArticleByChapterNumberByChapternumberData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ConstitutionArticleByChapterNumberByChapternumberResponses, unknown, ThrowOnError>({
        url: '/api/v1/ConstitutionArticle/byChapterNumber/{chapternumber}',
        ...options
    });
};

/**
 * List of Radios in Colombia
 * This endpoint returns the radios in colombia including general info like name, url, frequency, etc...
 */
export const getApiV1Radio = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1RadioData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1RadioResponses, unknown, ThrowOnError>({
        url: '/api/v1/Radio',
        ...options
    });
};

/**
 * Radios information by Id
 * This endpoint returns the information for the radio with the provided id
 */
export const getApiV1RadioById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1RadioByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1RadioByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/Radio/{id}',
        ...options
    });
};

/**
 * Radios information by name
 * This endpoint returns the information for the radio with the provided name
 */
export const getApiV1RadioNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1RadioNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1RadioNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/Radio/name/{name}',
        ...options
    });
};

/**
 * Search Radios by keyword
 * This endpoint returns a list of Radios any of the following fields(Name, Frequency, URL, Streamers) match the provided keyword
 */
export const getApiV1RadioSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1RadioSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1RadioSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/Radio/search/{keyword}',
        ...options
    });
};

/**
 * List of Radios using pagination - api/v1/radio/pagedList?page=1&pagesize=10
 * This endpoint returns a list of Radios using pagination including page, pagesize, total records and data, example api/v1/radio/pagedList?page=1&pagesize=10
 */
export const getApiV1RadioPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1RadioPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1RadioPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/Radio/pagedList',
        ...options
    });
};

/**
 * List of holidays in Colombia by year
 * This endpoint returns the list of holidays per year in Colombia
 */
export const getApiV1HolidayYearByYear = <ThrowOnError extends boolean = false>(options: Options<GetApiV1HolidayYearByYearData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1HolidayYearByYearResponses, unknown, ThrowOnError>({
        url: '/api/v1/Holiday/year/{year}',
        ...options
    });
};

/**
 * List of holidays in Colombia by year and moth
 * This endpoint returns the list of holidays per year and month in Colombia
 */
export const getApiV1HolidayYearByYearMonthByMonth = <ThrowOnError extends boolean = false>(options: Options<GetApiV1HolidayYearByYearMonthByMonthData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1HolidayYearByYearMonthByMonthResponses, unknown, ThrowOnError>({
        url: '/api/v1/Holiday/year/{year}/month/{month}',
        ...options
    });
};

/**
 * List of typical dishes in Colombia
 * This endpoint returns the typical dishes in colombia including a general info like description, image reference..
 */
export const getApiV1TypicalDish = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1TypicalDishData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1TypicalDishResponses, unknown, ThrowOnError>({
        url: '/api/v1/TypicalDish',
        ...options
    });
};

/**
 * Typical dishes information by Id
 * This endpoint returns the typical dishes in colombia including a general info like description, image reference with the provided id
 */
export const getApiV1TypicalDishById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TypicalDishByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TypicalDishByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/TypicalDish/{id}',
        ...options
    });
};

/**
 * List of typical dishes by departmentId
 * This endpoint returns a list of typical dishes filtered by departmentid
 */
export const getApiV1TypicalDishByIdDepartment = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TypicalDishByIdDepartmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TypicalDishByIdDepartmentResponses, unknown, ThrowOnError>({
        url: '/api/v1/TypicalDish/{id}/department',
        ...options
    });
};

/**
 * Typical dishes information by name
 * This endpoint returns the information for the typical dishes with the provided name
 */
export const getApiV1TypicalDishNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TypicalDishNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TypicalDishNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/TypicalDish/name/{name}',
        ...options
    });
};

/**
 * Search typical dish by keyword
 * This endpoint returns a list of typical dish any of the following fields(Name, Description) match the provided keyword
 */
export const getApiV1TypicalDishSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TypicalDishSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TypicalDishSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/TypicalDish/search/{keyword}',
        ...options
    });
};

/**
 * List of typical dishes using pagination
 * This endpoint returns a list of typical dishes using pagination including page, pagesize, total records and data, example api/v1/typicaldishes/pagedList?page=1&pagesize=10
 */
export const getApiV1TypicalDishPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TypicalDishPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TypicalDishPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/TypicalDish/pagedList',
        ...options
    });
};

/**
 * List of traditional fair and festival in Colombia
 * This endpoint returns the traditional fair and festival in colombia including a general info like name, description, city...
 */
export const getApiV1TraditionalFairAndFestival = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1TraditionalFairAndFestivalData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1TraditionalFairAndFestivalResponses, unknown, ThrowOnError>({
        url: '/api/v1/TraditionalFairAndFestival',
        ...options
    });
};

/**
 * Traditional fair and festival information by Id
 * This endpoint returns the traditional fair and festival in colombia including a general info like name, description, city with the provided id
 */
export const getApiV1TraditionalFairAndFestivalById = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TraditionalFairAndFestivalByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TraditionalFairAndFestivalByIdResponses, unknown, ThrowOnError>({
        url: '/api/v1/TraditionalFairAndFestival/{id}',
        ...options
    });
};

/**
 * List of traditional fair and festival by City Id
 * This endpoint returns a list of traditional fair and festival filtered by City Id.
 */
export const getApiV1TraditionalFairAndFestivalByIdCity = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TraditionalFairAndFestivalByIdCityData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TraditionalFairAndFestivalByIdCityResponses, unknown, ThrowOnError>({
        url: '/api/v1/TraditionalFairAndFestival/{id}/city',
        ...options
    });
};

/**
 * Traditional fair and festival information by name
 * This endpoint returns the information for the traditional fair and festival with the provided name
 */
export const getApiV1TraditionalFairAndFestivalNameByName = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TraditionalFairAndFestivalNameByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TraditionalFairAndFestivalNameByNameResponses, unknown, ThrowOnError>({
        url: '/api/v1/TraditionalFairAndFestival/name/{name}',
        ...options
    });
};

/**
 * Search traditional fair and festival by keyword
 * This endpoint returns a list of  traditional fair and festival any of the following fields(Name, Description) match the provided keyword
 */
export const getApiV1TraditionalFairAndFestivalSearchByKeyword = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TraditionalFairAndFestivalSearchByKeywordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TraditionalFairAndFestivalSearchByKeywordResponses, unknown, ThrowOnError>({
        url: '/api/v1/TraditionalFairAndFestival/search/{keyword}',
        ...options
    });
};

/**
 * List of traditional fair and festival using pagination
 * This endpoint returns a list of traditional fair and festival using pagination including page, pagesize, total records and data, example api/v1/typicaldishes/pagedList?page=1&pagesize=10
 */
export const getApiV1TraditionalFairAndFestivalPagedList = <ThrowOnError extends boolean = false>(options: Options<GetApiV1TraditionalFairAndFestivalPagedListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1TraditionalFairAndFestivalPagedListResponses, unknown, ThrowOnError>({
        url: '/api/v1/TraditionalFairAndFestival/pagedList',
        ...options
    });
};