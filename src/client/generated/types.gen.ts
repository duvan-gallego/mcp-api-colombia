// This file is auto-generated by @hey-api/openapi-ts

export type Airport = {
    id?: number;
    name?: string | null;
    iataCode?: string | null;
    oaciCode?: string | null;
    type?: string | null;
    deparmentId?: number;
    department?: Department;
    cityId?: number;
    city?: City;
    latitude?: number;
    longitude?: number;
};

export type AirportPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<Airport> | null;
};

export type CategoryNaturalArea = {
    id?: number;
    name?: string | null;
    description?: string | null;
    naturalAreas?: Array<NaturalArea> | null;
};

export type City = {
    id?: number;
    name?: string | null;
    description?: string | null;
    surface?: number | null;
    population?: number | null;
    postalCode?: string | null;
    departmentId?: number;
    department?: Department;
    touristAttractions?: Array<TouristAttraction> | null;
    presidents?: Array<President> | null;
    indigenousReservations?: Array<IndigenousReservation> | null;
    airports?: Array<Airport> | null;
    radios?: Array<Radio> | null;
};

export type CityPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<City> | null;
};

export type ConstitutionArticle = {
    id?: number;
    titleNumber?: number;
    title?: string | null;
    chapterNumber?: number;
    chapter?: string | null;
    articleNumber?: number;
    content?: string | null;
};

export type ConstitutionArticlePaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<ConstitutionArticle> | null;
};

export type Country = {
    id?: number;
    name?: string | null;
    description?: string | null;
    stateCapital?: string | null;
    surface?: number;
    population?: number;
    languages?: Array<string> | null;
    timeZone?: string | null;
    currency?: string | null;
    currencyCode?: string | null;
    currencySymbol?: string | null;
    isoCode?: string | null;
    internetDomain?: string | null;
    phonePrefix?: string | null;
    radioPrefix?: string | null;
    aircraftPrefix?: string | null;
    subRegion?: string | null;
    region?: string | null;
    borders?: Array<string> | null;
    flags?: Array<string> | null;
};

export type Department = {
    id?: number;
    name?: string | null;
    description?: string | null;
    cityCapitalId?: number | null;
    municipalities?: number | null;
    surface?: number;
    population?: number | null;
    phonePrefix?: string | null;
    countryId?: number;
    cityCapital?: City;
    country?: Country;
    cities?: Array<City> | null;
    regionId?: number | null;
    region?: Region;
    naturalAreas?: Array<NaturalArea> | null;
    maps?: Array<_Map> | null;
    indigenousReservations?: Array<IndigenousReservation> | null;
    airports?: Array<Airport> | null;
};

export type DepartmentPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<Department> | null;
};

export type Holiday = {
    date?: string;
    name?: string | null;
};

export type IndigenousReservation = {
    id?: number;
    name?: string | null;
    code?: string | null;
    procedureType?: string | null;
    administrativeActType?: string | null;
    administrativeActNumber?: number | null;
    administrativeActDate?: string | null;
    nativeCommunityId?: number | null;
    nativeCommunity?: NativeCommunity;
    deparmentId?: number | null;
    department?: Department;
    cityId?: number | null;
    city?: City;
};

export type IndigenousReservationPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<IndigenousReservation> | null;
};

export type _Map = {
    id?: number;
    name?: string | null;
    description?: string | null;
    departmentId?: number | null;
    urlImages?: Array<string> | null;
    urlSource?: string | null;
    department?: Department;
};

export type NativeCommunity = {
    id?: number;
    name?: string | null;
    description?: string | null;
    languages?: string | null;
    images?: Array<string> | null;
    indigenousReservations?: Array<IndigenousReservation> | null;
};

export type NativeCommunityPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<NativeCommunity> | null;
};

export type NaturalArea = {
    id?: number;
    areaGroupId?: number | null;
    categoryNaturalAreaId?: number;
    name?: string | null;
    departmentId?: number | null;
    daneCode?: number | null;
    landArea?: number | null;
    maritimeArea?: number | null;
    department?: Department;
    categoryNaturalArea?: CategoryNaturalArea;
};

export type NaturalAreaPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<NaturalArea> | null;
};

export type President = {
    id?: number;
    image?: string | null;
    name?: string | null;
    lastName?: string | null;
    startPeriodDate?: string;
    endPeriodDate?: string | null;
    politicalParty?: string | null;
    description?: string | null;
    cityId?: number;
    city?: City;
};

export type PresidentPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<President> | null;
};

export type Radio = {
    id?: number;
    name?: string | null;
    frequency?: number;
    band?: string | null;
    cityId?: number;
    city?: City;
    url?: string | null;
    streamers?: Array<string> | null;
};

export type RadioPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<Radio> | null;
};

export type Region = {
    id?: number;
    name?: string | null;
    description?: string | null;
    departments?: Array<Department> | null;
};

export type TouristAttraction = {
    id?: number;
    name?: string | null;
    description?: string | null;
    images?: Array<string> | null;
    latitude?: string | null;
    longitude?: string | null;
    cityId?: number;
    city?: City;
};

export type TouristAttractionPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<TouristAttraction> | null;
};

export type TraditionalFairAndFestival = {
    id?: number;
    name?: string | null;
    description?: string | null;
    month?: string | null;
    cityId?: number;
    city?: City;
};

export type TraditionalFairAndFestivalPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<TraditionalFairAndFestival> | null;
};

export type TypicalDish = {
    id?: number;
    name?: string | null;
    description?: string | null;
    ingredients?: string | null;
    imageUrl?: string | null;
    departmentId?: number | null;
    department?: Department;
};

export type TypicalDishPaginationResponseModel = {
    page?: number;
    pageSize?: number;
    totalRecords?: number;
    readonly pageCount?: number;
    data?: Array<TypicalDish> | null;
};

export type GetApiV1CountryColombiaData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/Country/Colombia';
};

export type GetApiV1CountryColombiaResponses = {
    /**
     * Success
     */
    200: Country;
};

export type GetApiV1CountryColombiaResponse = GetApiV1CountryColombiaResponses[keyof GetApiV1CountryColombiaResponses];

export type GetApiV1RegionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/Region';
};

export type GetApiV1RegionResponses = {
    /**
     * Success
     */
    200: Array<Region>;
};

export type GetApiV1RegionResponse = GetApiV1RegionResponses[keyof GetApiV1RegionResponses];

export type GetApiV1RegionByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/Region/{id}';
};

export type GetApiV1RegionByIdResponses = {
    /**
     * Success
     */
    200: Region;
};

export type GetApiV1RegionByIdResponse = GetApiV1RegionByIdResponses[keyof GetApiV1RegionByIdResponses];

export type GetApiV1RegionByIdDepartmentsData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/Region/{id}/departments';
};

export type GetApiV1RegionByIdDepartmentsResponses = {
    /**
     * Success
     */
    200: Region;
};

export type GetApiV1RegionByIdDepartmentsResponse = GetApiV1RegionByIdDepartmentsResponses[keyof GetApiV1RegionByIdDepartmentsResponses];

export type GetApiV1DepartmentData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/Department';
};

export type GetApiV1DepartmentResponses = {
    /**
     * Success
     */
    200: Array<Department>;
};

export type GetApiV1DepartmentResponse = GetApiV1DepartmentResponses[keyof GetApiV1DepartmentResponses];

export type GetApiV1DepartmentByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/Department/{id}';
};

export type GetApiV1DepartmentByIdResponses = {
    /**
     * Success
     */
    200: Department;
};

export type GetApiV1DepartmentByIdResponse = GetApiV1DepartmentByIdResponses[keyof GetApiV1DepartmentByIdResponses];

export type GetApiV1DepartmentByIdCitiesData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/Department/{id}/cities';
};

export type GetApiV1DepartmentByIdCitiesResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1DepartmentByIdCitiesResponse = GetApiV1DepartmentByIdCitiesResponses[keyof GetApiV1DepartmentByIdCitiesResponses];

export type GetApiV1DepartmentByIdNaturalareasData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/Department/{id}/naturalareas';
};

export type GetApiV1DepartmentByIdNaturalareasResponses = {
    /**
     * Success
     */
    200: Array<Department>;
};

export type GetApiV1DepartmentByIdNaturalareasResponse = GetApiV1DepartmentByIdNaturalareasResponses[keyof GetApiV1DepartmentByIdNaturalareasResponses];

export type GetApiV1DepartmentByIdTouristicattractionsData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/Department/{id}/touristicattractions';
};

export type GetApiV1DepartmentByIdTouristicattractionsResponses = {
    /**
     * Success
     */
    200: Array<TouristAttraction>;
};

export type GetApiV1DepartmentByIdTouristicattractionsResponse = GetApiV1DepartmentByIdTouristicattractionsResponses[keyof GetApiV1DepartmentByIdTouristicattractionsResponses];

export type GetApiV1DepartmentNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/Department/name/{name}';
};

export type GetApiV1DepartmentNameByNameResponses = {
    /**
     * Success
     */
    200: Array<Department>;
};

export type GetApiV1DepartmentNameByNameResponse = GetApiV1DepartmentNameByNameResponses[keyof GetApiV1DepartmentNameByNameResponses];

export type GetApiV1DepartmentSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/Department/search/{keyword}';
};

export type GetApiV1DepartmentSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<Department>;
};

export type GetApiV1DepartmentSearchByKeywordResponse = GetApiV1DepartmentSearchByKeywordResponses[keyof GetApiV1DepartmentSearchByKeywordResponses];

export type GetApiV1DepartmentPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/Department/pagedList';
};

export type GetApiV1DepartmentPagedListResponses = {
    /**
     * Success
     */
    200: DepartmentPaginationResponseModel;
};

export type GetApiV1DepartmentPagedListResponse = GetApiV1DepartmentPagedListResponses[keyof GetApiV1DepartmentPagedListResponses];

export type GetApiV1CityData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/City';
};

export type GetApiV1CityResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1CityResponse = GetApiV1CityResponses[keyof GetApiV1CityResponses];

export type GetApiV1CityByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/City/{id}';
};

export type GetApiV1CityByIdResponses = {
    /**
     * Success
     */
    200: City;
};

export type GetApiV1CityByIdResponse = GetApiV1CityByIdResponses[keyof GetApiV1CityByIdResponses];

export type GetApiV1CityNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/City/name/{name}';
};

export type GetApiV1CityNameByNameResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1CityNameByNameResponse = GetApiV1CityNameByNameResponses[keyof GetApiV1CityNameByNameResponses];

export type GetApiV1CitySearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/City/search/{keyword}';
};

export type GetApiV1CitySearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1CitySearchByKeywordResponse = GetApiV1CitySearchByKeywordResponses[keyof GetApiV1CitySearchByKeywordResponses];

export type GetApiV1CityPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/City/pagedList';
};

export type GetApiV1CityPagedListResponses = {
    /**
     * Success
     */
    200: CityPaginationResponseModel;
};

export type GetApiV1CityPagedListResponse = GetApiV1CityPagedListResponses[keyof GetApiV1CityPagedListResponses];

export type GetApiV1PresidentData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/President';
};

export type GetApiV1PresidentResponses = {
    /**
     * Success
     */
    200: Array<President>;
};

export type GetApiV1PresidentResponse = GetApiV1PresidentResponses[keyof GetApiV1PresidentResponses];

export type GetApiV1PresidentByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/President/{id}';
};

export type GetApiV1PresidentByIdResponses = {
    /**
     * Success
     */
    200: President;
};

export type GetApiV1PresidentByIdResponse = GetApiV1PresidentByIdResponses[keyof GetApiV1PresidentByIdResponses];

export type GetApiV1PresidentNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/President/name/{name}';
};

export type GetApiV1PresidentNameByNameResponses = {
    /**
     * Success
     */
    200: President;
};

export type GetApiV1PresidentNameByNameResponse = GetApiV1PresidentNameByNameResponses[keyof GetApiV1PresidentNameByNameResponses];

export type GetApiV1PresidentYearByYearData = {
    body?: never;
    path: {
        year: number;
    };
    query?: never;
    url: '/api/v1/President/year/{year}';
};

export type GetApiV1PresidentYearByYearResponses = {
    /**
     * Success
     */
    200: Array<President>;
};

export type GetApiV1PresidentYearByYearResponse = GetApiV1PresidentYearByYearResponses[keyof GetApiV1PresidentYearByYearResponses];

export type GetApiV1PresidentSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/President/search/{keyword}';
};

export type GetApiV1PresidentSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<President>;
};

export type GetApiV1PresidentSearchByKeywordResponse = GetApiV1PresidentSearchByKeywordResponses[keyof GetApiV1PresidentSearchByKeywordResponses];

export type GetApiV1PresidentPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/President/pagedList';
};

export type GetApiV1PresidentPagedListResponses = {
    /**
     * Success
     */
    200: PresidentPaginationResponseModel;
};

export type GetApiV1PresidentPagedListResponse = GetApiV1PresidentPagedListResponses[keyof GetApiV1PresidentPagedListResponses];

export type GetApiV1TouristicAttractionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/TouristicAttraction';
};

export type GetApiV1TouristicAttractionResponses = {
    /**
     * Success
     */
    200: Array<TouristAttraction>;
};

export type GetApiV1TouristicAttractionResponse = GetApiV1TouristicAttractionResponses[keyof GetApiV1TouristicAttractionResponses];

export type GetApiV1TouristicAttractionByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/TouristicAttraction/{id}';
};

export type GetApiV1TouristicAttractionByIdResponses = {
    /**
     * Success
     */
    200: TouristAttraction;
};

export type GetApiV1TouristicAttractionByIdResponse = GetApiV1TouristicAttractionByIdResponses[keyof GetApiV1TouristicAttractionByIdResponses];

export type GetApiV1TouristicAttractionNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/TouristicAttraction/name/{name}';
};

export type GetApiV1TouristicAttractionNameByNameResponses = {
    /**
     * Success
     */
    200: Array<TouristAttraction>;
};

export type GetApiV1TouristicAttractionNameByNameResponse = GetApiV1TouristicAttractionNameByNameResponses[keyof GetApiV1TouristicAttractionNameByNameResponses];

export type GetApiV1TouristicAttractionSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/TouristicAttraction/search/{keyword}';
};

export type GetApiV1TouristicAttractionSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<TouristAttraction>;
};

export type GetApiV1TouristicAttractionSearchByKeywordResponse = GetApiV1TouristicAttractionSearchByKeywordResponses[keyof GetApiV1TouristicAttractionSearchByKeywordResponses];

export type GetApiV1TouristicAttractionPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/TouristicAttraction/pagedList';
};

export type GetApiV1TouristicAttractionPagedListResponses = {
    /**
     * Success
     */
    200: TouristAttractionPaginationResponseModel;
};

export type GetApiV1TouristicAttractionPagedListResponse = GetApiV1TouristicAttractionPagedListResponses[keyof GetApiV1TouristicAttractionPagedListResponses];

export type GetApiV1CategoryNaturalAreaData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/CategoryNaturalArea';
};

export type GetApiV1CategoryNaturalAreaResponses = {
    /**
     * Success
     */
    200: Array<CategoryNaturalArea>;
};

export type GetApiV1CategoryNaturalAreaResponse = GetApiV1CategoryNaturalAreaResponses[keyof GetApiV1CategoryNaturalAreaResponses];

export type GetApiV1CategoryNaturalAreaByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/CategoryNaturalArea/{id}';
};

export type GetApiV1CategoryNaturalAreaByIdResponses = {
    /**
     * Success
     */
    200: CategoryNaturalArea;
};

export type GetApiV1CategoryNaturalAreaByIdResponse = GetApiV1CategoryNaturalAreaByIdResponses[keyof GetApiV1CategoryNaturalAreaByIdResponses];

export type GetApiV1CategoryNaturalAreaByIdNaturalAreasData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/CategoryNaturalArea/{id}/NaturalAreas';
};

export type GetApiV1CategoryNaturalAreaByIdNaturalAreasResponses = {
    /**
     * Success
     */
    200: CategoryNaturalArea;
};

export type GetApiV1CategoryNaturalAreaByIdNaturalAreasResponse = GetApiV1CategoryNaturalAreaByIdNaturalAreasResponses[keyof GetApiV1CategoryNaturalAreaByIdNaturalAreasResponses];

export type GetApiV1NaturalAreaData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/NaturalArea';
};

export type GetApiV1NaturalAreaResponses = {
    /**
     * Success
     */
    200: Array<_Map>;
};

export type GetApiV1NaturalAreaResponse = GetApiV1NaturalAreaResponses[keyof GetApiV1NaturalAreaResponses];

export type GetApiV1NaturalAreaByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/NaturalArea/{id}';
};

export type GetApiV1NaturalAreaByIdResponses = {
    /**
     * Success
     */
    200: NaturalArea;
};

export type GetApiV1NaturalAreaByIdResponse = GetApiV1NaturalAreaByIdResponses[keyof GetApiV1NaturalAreaByIdResponses];

export type GetApiV1NaturalAreaNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/NaturalArea/name/{name}';
};

export type GetApiV1NaturalAreaNameByNameResponses = {
    /**
     * Success
     */
    200: Array<NaturalArea>;
};

export type GetApiV1NaturalAreaNameByNameResponse = GetApiV1NaturalAreaNameByNameResponses[keyof GetApiV1NaturalAreaNameByNameResponses];

export type GetApiV1NaturalAreaSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/NaturalArea/search/{keyword}';
};

export type GetApiV1NaturalAreaSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<NaturalArea>;
};

export type GetApiV1NaturalAreaSearchByKeywordResponse = GetApiV1NaturalAreaSearchByKeywordResponses[keyof GetApiV1NaturalAreaSearchByKeywordResponses];

export type GetApiV1NaturalAreaPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/NaturalArea/pagedList';
};

export type GetApiV1NaturalAreaPagedListResponses = {
    /**
     * Success
     */
    200: NaturalAreaPaginationResponseModel;
};

export type GetApiV1NaturalAreaPagedListResponse = GetApiV1NaturalAreaPagedListResponses[keyof GetApiV1NaturalAreaPagedListResponses];

export type GetApiV1MapData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/Map';
};

export type GetApiV1MapResponses = {
    /**
     * Success
     */
    200: Array<_Map>;
};

export type GetApiV1MapResponse = GetApiV1MapResponses[keyof GetApiV1MapResponses];

export type GetApiV1MapByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/Map/{id}';
};

export type GetApiV1MapByIdResponses = {
    /**
     * Success
     */
    200: _Map;
};

export type GetApiV1MapByIdResponse = GetApiV1MapByIdResponses[keyof GetApiV1MapByIdResponses];

export type GetApiV1InvasiveSpecieData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/InvasiveSpecie';
};

export type GetApiV1InvasiveSpecieResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1InvasiveSpecieResponse = GetApiV1InvasiveSpecieResponses[keyof GetApiV1InvasiveSpecieResponses];

export type GetApiV1InvasiveSpecieByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/InvasiveSpecie/{id}';
};

export type GetApiV1InvasiveSpecieByIdResponses = {
    /**
     * Success
     */
    200: City;
};

export type GetApiV1InvasiveSpecieByIdResponse = GetApiV1InvasiveSpecieByIdResponses[keyof GetApiV1InvasiveSpecieByIdResponses];

export type GetApiV1InvasiveSpecieNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/InvasiveSpecie/name/{name}';
};

export type GetApiV1InvasiveSpecieNameByNameResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1InvasiveSpecieNameByNameResponse = GetApiV1InvasiveSpecieNameByNameResponses[keyof GetApiV1InvasiveSpecieNameByNameResponses];

export type GetApiV1InvasiveSpecieSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/InvasiveSpecie/search/{keyword}';
};

export type GetApiV1InvasiveSpecieSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1InvasiveSpecieSearchByKeywordResponse = GetApiV1InvasiveSpecieSearchByKeywordResponses[keyof GetApiV1InvasiveSpecieSearchByKeywordResponses];

export type GetApiV1InvasiveSpeciePagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/InvasiveSpecie/pagedList';
};

export type GetApiV1InvasiveSpeciePagedListResponses = {
    /**
     * Success
     */
    200: CityPaginationResponseModel;
};

export type GetApiV1InvasiveSpeciePagedListResponse = GetApiV1InvasiveSpeciePagedListResponses[keyof GetApiV1InvasiveSpeciePagedListResponses];

export type GetApiV1NativeCommunityData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/NativeCommunity';
};

export type GetApiV1NativeCommunityResponses = {
    /**
     * Success
     */
    200: Array<NativeCommunity>;
};

export type GetApiV1NativeCommunityResponse = GetApiV1NativeCommunityResponses[keyof GetApiV1NativeCommunityResponses];

export type GetApiV1NativeCommunityByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/NativeCommunity/{id}';
};

export type GetApiV1NativeCommunityByIdResponses = {
    /**
     * Success
     */
    200: City;
};

export type GetApiV1NativeCommunityByIdResponse = GetApiV1NativeCommunityByIdResponses[keyof GetApiV1NativeCommunityByIdResponses];

export type GetApiV1NativeCommunityNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/NativeCommunity/name/{name}';
};

export type GetApiV1NativeCommunityNameByNameResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1NativeCommunityNameByNameResponse = GetApiV1NativeCommunityNameByNameResponses[keyof GetApiV1NativeCommunityNameByNameResponses];

export type GetApiV1NativeCommunitySearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/NativeCommunity/search/{keyword}';
};

export type GetApiV1NativeCommunitySearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<NativeCommunity>;
};

export type GetApiV1NativeCommunitySearchByKeywordResponse = GetApiV1NativeCommunitySearchByKeywordResponses[keyof GetApiV1NativeCommunitySearchByKeywordResponses];

export type GetApiV1NativeCommunityPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/NativeCommunity/pagedList';
};

export type GetApiV1NativeCommunityPagedListResponses = {
    /**
     * Success
     */
    200: NativeCommunityPaginationResponseModel;
};

export type GetApiV1NativeCommunityPagedListResponse = GetApiV1NativeCommunityPagedListResponses[keyof GetApiV1NativeCommunityPagedListResponses];

export type GetApiV1IndigenousReservationData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/IndigenousReservation';
};

export type GetApiV1IndigenousReservationResponses = {
    /**
     * Success
     */
    200: Array<IndigenousReservation>;
};

export type GetApiV1IndigenousReservationResponse = GetApiV1IndigenousReservationResponses[keyof GetApiV1IndigenousReservationResponses];

export type GetApiV1IndigenousReservationByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/IndigenousReservation/{id}';
};

export type GetApiV1IndigenousReservationByIdResponses = {
    /**
     * Success
     */
    200: City;
};

export type GetApiV1IndigenousReservationByIdResponse = GetApiV1IndigenousReservationByIdResponses[keyof GetApiV1IndigenousReservationByIdResponses];

export type GetApiV1IndigenousReservationNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/IndigenousReservation/name/{name}';
};

export type GetApiV1IndigenousReservationNameByNameResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1IndigenousReservationNameByNameResponse = GetApiV1IndigenousReservationNameByNameResponses[keyof GetApiV1IndigenousReservationNameByNameResponses];

export type GetApiV1IndigenousReservationSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/IndigenousReservation/search/{keyword}';
};

export type GetApiV1IndigenousReservationSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<IndigenousReservation>;
};

export type GetApiV1IndigenousReservationSearchByKeywordResponse = GetApiV1IndigenousReservationSearchByKeywordResponses[keyof GetApiV1IndigenousReservationSearchByKeywordResponses];

export type GetApiV1IndigenousReservationPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/IndigenousReservation/pagedList';
};

export type GetApiV1IndigenousReservationPagedListResponses = {
    /**
     * Success
     */
    200: IndigenousReservationPaginationResponseModel;
};

export type GetApiV1IndigenousReservationPagedListResponse = GetApiV1IndigenousReservationPagedListResponses[keyof GetApiV1IndigenousReservationPagedListResponses];

export type GetApiV1AirportData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/Airport';
};

export type GetApiV1AirportResponses = {
    /**
     * Success
     */
    200: Array<Airport>;
};

export type GetApiV1AirportResponse = GetApiV1AirportResponses[keyof GetApiV1AirportResponses];

export type GetApiV1AirportByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/Airport/{id}';
};

export type GetApiV1AirportByIdResponses = {
    /**
     * Success
     */
    200: City;
};

export type GetApiV1AirportByIdResponse = GetApiV1AirportByIdResponses[keyof GetApiV1AirportByIdResponses];

export type GetApiV1AirportNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/Airport/name/{name}';
};

export type GetApiV1AirportNameByNameResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1AirportNameByNameResponse = GetApiV1AirportNameByNameResponses[keyof GetApiV1AirportNameByNameResponses];

export type GetApiV1AirportSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/Airport/search/{keyword}';
};

export type GetApiV1AirportSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<Airport>;
};

export type GetApiV1AirportSearchByKeywordResponse = GetApiV1AirportSearchByKeywordResponses[keyof GetApiV1AirportSearchByKeywordResponses];

export type GetApiV1AirportPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/Airport/pagedList';
};

export type GetApiV1AirportPagedListResponses = {
    /**
     * Success
     */
    200: AirportPaginationResponseModel;
};

export type GetApiV1AirportPagedListResponse = GetApiV1AirportPagedListResponses[keyof GetApiV1AirportPagedListResponses];

export type GetApiV1ConstitutionArticleData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/ConstitutionArticle';
};

export type GetApiV1ConstitutionArticleResponses = {
    /**
     * Success
     */
    200: Array<ConstitutionArticle>;
};

export type GetApiV1ConstitutionArticleResponse = GetApiV1ConstitutionArticleResponses[keyof GetApiV1ConstitutionArticleResponses];

export type GetApiV1ConstitutionArticleByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/ConstitutionArticle/{id}';
};

export type GetApiV1ConstitutionArticleByIdResponses = {
    /**
     * Success
     */
    200: City;
};

export type GetApiV1ConstitutionArticleByIdResponse = GetApiV1ConstitutionArticleByIdResponses[keyof GetApiV1ConstitutionArticleByIdResponses];

export type GetApiV1ConstitutionArticleSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/ConstitutionArticle/search/{keyword}';
};

export type GetApiV1ConstitutionArticleSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<ConstitutionArticle>;
};

export type GetApiV1ConstitutionArticleSearchByKeywordResponse = GetApiV1ConstitutionArticleSearchByKeywordResponses[keyof GetApiV1ConstitutionArticleSearchByKeywordResponses];

export type GetApiV1ConstitutionArticlePagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/ConstitutionArticle/pagedList';
};

export type GetApiV1ConstitutionArticlePagedListResponses = {
    /**
     * Success
     */
    200: ConstitutionArticlePaginationResponseModel;
};

export type GetApiV1ConstitutionArticlePagedListResponse = GetApiV1ConstitutionArticlePagedListResponses[keyof GetApiV1ConstitutionArticlePagedListResponses];

export type GetApiV1ConstitutionArticleByChapterNumberByChapternumberData = {
    body?: never;
    path: {
        chapternumber: number;
    };
    query?: never;
    url: '/api/v1/ConstitutionArticle/byChapterNumber/{chapternumber}';
};

export type GetApiV1ConstitutionArticleByChapterNumberByChapternumberResponses = {
    /**
     * Success
     */
    200: Array<ConstitutionArticle>;
};

export type GetApiV1ConstitutionArticleByChapterNumberByChapternumberResponse = GetApiV1ConstitutionArticleByChapterNumberByChapternumberResponses[keyof GetApiV1ConstitutionArticleByChapterNumberByChapternumberResponses];

export type GetApiV1RadioData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/Radio';
};

export type GetApiV1RadioResponses = {
    /**
     * Success
     */
    200: Array<Radio>;
};

export type GetApiV1RadioResponse = GetApiV1RadioResponses[keyof GetApiV1RadioResponses];

export type GetApiV1RadioByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/Radio/{id}';
};

export type GetApiV1RadioByIdResponses = {
    /**
     * Success
     */
    200: City;
};

export type GetApiV1RadioByIdResponse = GetApiV1RadioByIdResponses[keyof GetApiV1RadioByIdResponses];

export type GetApiV1RadioNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/Radio/name/{name}';
};

export type GetApiV1RadioNameByNameResponses = {
    /**
     * Success
     */
    200: Array<City>;
};

export type GetApiV1RadioNameByNameResponse = GetApiV1RadioNameByNameResponses[keyof GetApiV1RadioNameByNameResponses];

export type GetApiV1RadioSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/Radio/search/{keyword}';
};

export type GetApiV1RadioSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<Radio>;
};

export type GetApiV1RadioSearchByKeywordResponse = GetApiV1RadioSearchByKeywordResponses[keyof GetApiV1RadioSearchByKeywordResponses];

export type GetApiV1RadioPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/Radio/pagedList';
};

export type GetApiV1RadioPagedListResponses = {
    /**
     * Success
     */
    200: RadioPaginationResponseModel;
};

export type GetApiV1RadioPagedListResponse = GetApiV1RadioPagedListResponses[keyof GetApiV1RadioPagedListResponses];

export type GetApiV1HolidayYearByYearData = {
    body?: never;
    path: {
        year: number;
    };
    query?: never;
    url: '/api/v1/Holiday/year/{year}';
};

export type GetApiV1HolidayYearByYearResponses = {
    /**
     * Success
     */
    200: Array<Holiday>;
};

export type GetApiV1HolidayYearByYearResponse = GetApiV1HolidayYearByYearResponses[keyof GetApiV1HolidayYearByYearResponses];

export type GetApiV1HolidayYearByYearMonthByMonthData = {
    body?: never;
    path: {
        year: number;
        month: number;
    };
    query?: never;
    url: '/api/v1/Holiday/year/{year}/month/{month}';
};

export type GetApiV1HolidayYearByYearMonthByMonthResponses = {
    /**
     * Success
     */
    200: Array<Holiday>;
};

export type GetApiV1HolidayYearByYearMonthByMonthResponse = GetApiV1HolidayYearByYearMonthByMonthResponses[keyof GetApiV1HolidayYearByYearMonthByMonthResponses];

export type GetApiV1TypicalDishData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/TypicalDish';
};

export type GetApiV1TypicalDishResponses = {
    /**
     * Success
     */
    200: Array<TypicalDish>;
};

export type GetApiV1TypicalDishResponse = GetApiV1TypicalDishResponses[keyof GetApiV1TypicalDishResponses];

export type GetApiV1TypicalDishByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/TypicalDish/{id}';
};

export type GetApiV1TypicalDishByIdResponses = {
    /**
     * Success
     */
    200: TypicalDish;
};

export type GetApiV1TypicalDishByIdResponse = GetApiV1TypicalDishByIdResponses[keyof GetApiV1TypicalDishByIdResponses];

export type GetApiV1TypicalDishByIdDepartmentData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/TypicalDish/{id}/department';
};

export type GetApiV1TypicalDishByIdDepartmentResponses = {
    /**
     * Success
     */
    200: Array<TypicalDish>;
};

export type GetApiV1TypicalDishByIdDepartmentResponse = GetApiV1TypicalDishByIdDepartmentResponses[keyof GetApiV1TypicalDishByIdDepartmentResponses];

export type GetApiV1TypicalDishNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/TypicalDish/name/{name}';
};

export type GetApiV1TypicalDishNameByNameResponses = {
    /**
     * Success
     */
    200: Array<TypicalDish>;
};

export type GetApiV1TypicalDishNameByNameResponse = GetApiV1TypicalDishNameByNameResponses[keyof GetApiV1TypicalDishNameByNameResponses];

export type GetApiV1TypicalDishSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/TypicalDish/search/{keyword}';
};

export type GetApiV1TypicalDishSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<TypicalDish>;
};

export type GetApiV1TypicalDishSearchByKeywordResponse = GetApiV1TypicalDishSearchByKeywordResponses[keyof GetApiV1TypicalDishSearchByKeywordResponses];

export type GetApiV1TypicalDishPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/TypicalDish/pagedList';
};

export type GetApiV1TypicalDishPagedListResponses = {
    /**
     * Success
     */
    200: TypicalDishPaginationResponseModel;
};

export type GetApiV1TypicalDishPagedListResponse = GetApiV1TypicalDishPagedListResponses[keyof GetApiV1TypicalDishPagedListResponses];

export type GetApiV1TraditionalFairAndFestivalData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/TraditionalFairAndFestival';
};

export type GetApiV1TraditionalFairAndFestivalResponses = {
    /**
     * Success
     */
    200: Array<TraditionalFairAndFestival>;
};

export type GetApiV1TraditionalFairAndFestivalResponse = GetApiV1TraditionalFairAndFestivalResponses[keyof GetApiV1TraditionalFairAndFestivalResponses];

export type GetApiV1TraditionalFairAndFestivalByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/v1/TraditionalFairAndFestival/{id}';
};

export type GetApiV1TraditionalFairAndFestivalByIdResponses = {
    /**
     * Success
     */
    200: TraditionalFairAndFestival;
};

export type GetApiV1TraditionalFairAndFestivalByIdResponse = GetApiV1TraditionalFairAndFestivalByIdResponses[keyof GetApiV1TraditionalFairAndFestivalByIdResponses];

export type GetApiV1TraditionalFairAndFestivalByIdCityData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        /**
         * It can be sorted by any of the fields that have numerical, string, or date values (for example: Id, name, description, etc.).
         */
        sortBy?: string;
        /**
         * Possible values: 'asc' or 'desc'.
         */
        sortDirection?: string;
    };
    url: '/api/v1/TraditionalFairAndFestival/{id}/city';
};

export type GetApiV1TraditionalFairAndFestivalByIdCityResponses = {
    /**
     * Success
     */
    200: Array<TraditionalFairAndFestival>;
};

export type GetApiV1TraditionalFairAndFestivalByIdCityResponse = GetApiV1TraditionalFairAndFestivalByIdCityResponses[keyof GetApiV1TraditionalFairAndFestivalByIdCityResponses];

export type GetApiV1TraditionalFairAndFestivalNameByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/v1/TraditionalFairAndFestival/name/{name}';
};

export type GetApiV1TraditionalFairAndFestivalNameByNameResponses = {
    /**
     * Success
     */
    200: Array<TraditionalFairAndFestival>;
};

export type GetApiV1TraditionalFairAndFestivalNameByNameResponse = GetApiV1TraditionalFairAndFestivalNameByNameResponses[keyof GetApiV1TraditionalFairAndFestivalNameByNameResponses];

export type GetApiV1TraditionalFairAndFestivalSearchByKeywordData = {
    body?: never;
    path: {
        keyword: string;
    };
    query?: never;
    url: '/api/v1/TraditionalFairAndFestival/search/{keyword}';
};

export type GetApiV1TraditionalFairAndFestivalSearchByKeywordResponses = {
    /**
     * Success
     */
    200: Array<TraditionalFairAndFestival>;
};

export type GetApiV1TraditionalFairAndFestivalSearchByKeywordResponse = GetApiV1TraditionalFairAndFestivalSearchByKeywordResponses[keyof GetApiV1TraditionalFairAndFestivalSearchByKeywordResponses];

export type GetApiV1TraditionalFairAndFestivalPagedListData = {
    body?: never;
    path?: never;
    query: {
        SortBy?: string;
        SortDirection?: string;
        Page: number;
        PageSize: number;
    };
    url: '/api/v1/TraditionalFairAndFestival/pagedList';
};

export type GetApiV1TraditionalFairAndFestivalPagedListResponses = {
    /**
     * Success
     */
    200: TraditionalFairAndFestivalPaginationResponseModel;
};

export type GetApiV1TraditionalFairAndFestivalPagedListResponse = GetApiV1TraditionalFairAndFestivalPagedListResponses[keyof GetApiV1TraditionalFairAndFestivalPagedListResponses];

export type ClientOptions = {
    baseUrl: 'https://api-colombia.com' | (string & {});
};